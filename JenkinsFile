pipeline {
  agent any

  stages {
    stage('Checkout GitHub Repo') {
      steps {
        git branch: 'main', url: 'https://github.com/vishalpatil0105/cicid-assignment.git'
      }
    }

    stage('Build Maven Package and Run Tests') {
      steps {
        sh 'ls -ltr'
        sh 'mvn clean package'
        junit 'target/surefire-reports/*.xml' // Assuming JUnit tests
      }
    }

    stage('SonarQube Testing') {
      environment {
        SONAR_URL = "http://54.75.82.155:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube_token', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Copy JAR Locally') {
      steps {
        script {
          sh 'cp ./target/spring-boot-assignment.jar /tmp/spring-boot-assignment.jar'
        }
      }
    }

    stage('Run JAR File') {
      steps {
        script {
          sh 'nohup java -jar /tmp/spring-boot-assignment.jar > /tmp/spring-boot-assignment.log 2>&1 &'
          sh 'echo "Success!"'
        }
      }
    }

    stage('Push New Changes Jar File to GitHub') {
      environment {
        GIT_REPO_NAME = "cicid-assignment"
        GIT_USER_NAME = "vishalpatil0105"
      }
      steps {
        withCredentials([string(credentialsId: 'github_token', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "patilvishal0622@gmail.com"
            git config user.name "vishalpatil0105"
            git add .
            git commit -m "added new changes from build ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}